plugins {
    id 'checkstyle'
    //id "com.github.spotbugs" version "4.5.1"
}
apply plugin: 'application'
apply plugin: 'jacoco'


sourceSets {
    main {
        java {
            srcDirs = ['src']
            exclude 'main/resources/**'
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

mainClassName = 'main.java.memoranda.Start'

compileJava.options.encoding = 'UTF-8'
// Set version and Build number

version = '1.1.0'
ext {
    buildNumber = '001'
}
test {
    useJUnitPlatform()
}


// Repositories and dependencies for code go here
repositories {
    mavenCentral()
}

dependencies {
    implementation 'xom:xom:1.3.9'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.22'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:5.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    implementation 'org.jdom:jdom2:2.0.6.1'
}

///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////
apply plugin: 'checkstyle'

checkstyle {
    // Keep checkstyle a little quieter
    ignoreFailures = true
    showViolations = false
}

final withType = tasks.withType(Checkstyle).tap {
    configureEach {
        reports {
            html.required.set(true)
            xml.required.set(false)
        }
    }
}

checkstyle {
    toolVersion = "8.8"
}


task fatJar(type: Jar) {
    archiveBaseName = 'memoranda'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': 'main.java.memoranda.Start'
    }
}
tasks.register('createVersionFile') {
    doLast {
        def propsFile = new File('src/main/resources/version.properties')
        def props = new Properties()

        props['version'] = version
        props['buildNumber'] = buildNumber

        propsFile.withWriter('UTF-8') { writer ->
            props.store(writer, null)
        }
    }
}

tasks.named('build').configure {
    dependsOn createVersionFile
}